name: Teamo deployment

on:
  push:
    branches:
      - main
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
    paths-ignore:
      - tests/**


# This could be nicer.
# Will fix when actions in actions are supported.
# See https://github.com/actions/runner/issues/646
jobs:
  deploy-main:
    name: Deploy main branch
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: FranzDiebold/github-env-vars-action@v1.2.0
    - name: Setup Python environment
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'
        architecture: x64
    - name: Build the wheel package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python setup.py bdist_wheel
    - name: Extract some stuff
      run: |
        echo ::set-output name=version::$(cat VERSION)
        echo Github ref: $GITHUB_REF
        echo Github ref 2: ${{ env.GITHUB_REF }}
        if [[ "$GITHUB_REF_NAME_SLUG" == "main" ]]
        then
          echo ::set-output name=tag::docker.pkg.github.com/${GITHUB_REPOSITORY_OWNER_SLUG}/${GITHUB_REPOSITORY_NAME_SLUG}/teamo:${GITHUB_REF_NAME_SLUG}
          echo "::set-output name=token::${{ secrets.TEAMO_BOT_TOKEN_MAIN }}"
          echo ::set-output name=deploy_name::main
          echo ::set-output name=tag_suffix::main
        elif [[ $GITHUB_REF == refs/tags/* ]]
        then
          if [[ $GITHUB_REF_NAME != $(cat VERSION) ]]
          then
            echo "::error::Tag name doesn't match VERSION file!"
          fi
          echo ::set-output name=tag::docker.pkg.github.com/${GITHUB_REPOSITORY_OWNER_SLUG}/${GITHUB_REPOSITORY_NAME_SLUG}/teamo:latest
          echo "::set-output name=token::${{ secrets.TEAMO_BOT_TOKEN_DEPLOY }}"
          echo ::set-output name=deploy_name::release
          echo ::set-output name=tag_suffix::latest
        else
          echo "::error::Invalid branch: $GITHUB_REF"
        fi
      id: extract_variables
    - name: Build and push the Docker image
      run: |
        echo ${{ secrets.GITHUB_TOKEN }} | docker login https://docker.pkg.github.com -u ${GITHUB_REPOSITORY_OWNER} --password-stdin
        docker build -t ${{ steps.extract_variables.outputs.tag }} --build-arg VERSION=${{ steps.extract_variables.outputs.version }} .
        if [[ $GITHUB_REF == refs/tags/* ]]
        then
          docker tag ${{ steps.extract_variables.outputs.tag }} ${{ steps.extract_variables.outputs.tag }}:${{ steps.extract_variables.outputs.version }}
        fi
        docker push ${{ steps.extract_variables.outputs.tag }}
    - name: Pull and start Docker container
      uses: appleboy/ssh-action@master
      with:
        host: '${{ secrets.DEPLOY_HOST }}'
        username: '${{ secrets.DEPLOY_USERNAME }}'
        passphrase: '${{ secrets.DEPLOY_PASSPHRASE }}'
        key: '${{ secrets.DEPLOY_KEY }}'
        port: '${{ secrets.DEPLOY_PORT }}'
        script: |
          set -e
          docker login https://docker.pkg.github.com -u ${{ env.GITHUB_REPOSITORY_OWNER }} -p ${{ secrets.GITHUB_TOKEN }}
          docker pull ${{ steps.extract_variables.outputs.tag }}
          docker stop teamo-${{ steps.extract_variables.outputs.deploy_name }}-instance || true
          docker rm teamo-${{ steps.extract_variables.outputs.deploy_name }}-instance || true
          touch teamo/${{ steps.extract_variables.outputs.deploy_name }}/db/teamo.db
          docker run -e TEAMO_BOT_TOKEN=${{ steps.extract_variables.outputs.token }} -d -v $PWD/teamo/${{ steps.extract_variables.outputs.deploy_name }}/db/teamo.db:/teamo/db/teamo.db --name teamo-${{ steps.extract_variables.outputs.deploy_name }}-instance teamo:${{ steps.extract_variables.outputs.tag_suffix }}
          sleep 10
          if [ "$( docker container inspect -f '{{.State.Status}}' teamo-${{ env.GITHUB_REF_NAME }}-instance )" == "running" ]; then exit 0; else echo "Docker container is not running. Did it crash during startup?" && exit 1; fi
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Teamo version ${{ steps.extract_variables.outputs.version }}
        body: |
          See CHANGELOG.md for changes in this release :)
        draft: false
        prerelease: false
    - name: Upload Release Asset
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: dist/teamo-${{ steps.extract_variables.outputs.version }}-py3-none-any.whl
        asset_name: Python Wheel
        asset_content_type: application/octet-stream

# jobs:
#   deploy:
#     name: Deploy
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: ./.github/actions/deploy-action
#         if: github.ref == 'refs/heads/main'
#         with:
#           bot-token: ${{ secrets.TEAMO_BOT_TOKEN_MAIN }}
#           host: ${{ secrets.DEPLOY_HOST }}
#           port: ${{ secrets.DEPLOY_PORT }}
#           username: ${{ secrets.DEPLOY_USERNAME }}
#           key: ${{ secrets.DEPLOY_KEY }}
#           passphrase: ${{ secrets.DEPLOY_PASSPHRASE }}
#           branch: main
#       - uses: ./.github/actions/deploy-action
#         if: github.ref == 'refs/heads/deploy'
#         with:
#           bot-token: ${{ secrets.TEAMO_BOT_TOKEN_DEPLOY }}
#           host: ${{ secrets.DEPLOY_HOST }}
#           port: ${{ secrets.DEPLOY_PORT }}
#           username: ${{ secrets.DEPLOY_USERNAME }}
#           key: ${{ secrets.DEPLOY_KEY }}
#           passphrase: ${{ secrets.DEPLOY_PASSPHRASE }}
#           branch: deploy
